{"version":3,"file":"static/js/640.5ed41886.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Posts/Post/style.module.css?6a76","components/Profile/Posts/Post/index.tsx","webpack://my-app/./src/components/Profile/Posts/style.module.css?7fd8","components/Profile/Posts/index.tsx","containers/PostsContainer/index.tsx","webpack://my-app/./src/components/Profile/ProfileInfo/style.module.css?ce29","components/Profile/Status/index.tsx","components/Profile/ProfileInfo/index.tsx","components/Profile/index.tsx","containers/ProfileContainer/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"style_post__bgfTN\",\"user-info\":\"style_user-info__a77Yn\",\"content\":\"style_content__4wOi5\",\"statistic\":\"style_statistic__yDc4o\"};","import { PostData } from \"../../interfaces\";\r\nimport styles from \"./style.module.css\";\r\nimport userAvatarUrl from \"../../../../assets/user-avatar.png\";\r\nimport likeUrl from \"../../../../assets/like.png\";\r\n\r\nexport const Post: React.FC<PostData> = ({ message, likes }) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles[\"user-info\"]}>\r\n        <img src={userAvatarUrl} alt=\"avatar\" />\r\n        <span>User name</span>\r\n      </div>\r\n      <div className={styles.content}>{message}</div>\r\n      <div className={styles.statistic}>\r\n        <img src={likeUrl} alt=\"like\" />\r\n        {likes}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts-container\":\"style_posts-container__Q3K4L\",\"create-post\":\"style_create-post__M9u5Y\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { ProfileAPIData } from \"../../../interfaces\";\r\nimport { maxLength, required } from \"../../../utils/validators\";\r\nimport { FormTextarea } from \"../../UI/Form/Field\";\r\nimport { Post } from \"./Post\";\r\nimport styles from \"./style.module.css\";\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nexport const Posts: React.FC<ProfileAPIData> = React.memo(\r\n  ({ posts, sendPost }) => {\r\n    const sendPostData = (data: any) => {\r\n      sendPost(data.post);\r\n    };\r\n\r\n    return (\r\n      <div className={styles[\"posts-container\"]}>\r\n        <div className={styles[\"create-post\"]}>\r\n          <PostReduxForm onSubmit={sendPostData} />\r\n        </div>\r\n        <div>\r\n          {posts.map(({ id, text, likes }) => (\r\n            <Post key={id} message={text} likes={likes} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst PostForm: React.FC<any> = ({ handleSubmit }) => {\r\n  return (\r\n    <div className={styles[\"posts-container\"]}>\r\n      <form onSubmit={handleSubmit} className={styles[\"create-post\"]}>\r\n        <Field\r\n          type=\"text\"\r\n          component={FormTextarea}\r\n          name=\"post\"\r\n          placeholder=\"type post text\"\r\n          validate={[required, maxLength100]}\r\n        />\r\n        <button>Add post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: \"post\" })(PostForm);\r\n","import { connect } from \"react-redux\";\r\nimport { Posts } from \"../../components/Profile/Posts\";\r\nimport { StateData } from \"../../interfaces\";\r\nimport { sendPost } from \"../../redux/reducers/ProfileReducer\";\r\n\r\nconst mapStateToProps = (state: StateData) => ({\r\n  posts: state.profilePage.posts,\r\n});\r\n\r\nexport const PostsContainer = connect(mapStateToProps, {\r\n  sendPost,\r\n})(Posts);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile-img\":\"style_profile-img__cHmLz\",\"user-info\":\"style_user-info__FAYSa\",\"user-details\":\"style_user-details__t3Bdu\",\"details-container\":\"style_details-container__NjYsL\"};","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styles from \"./style.module.css\";\r\n\r\nexport interface StatusData {\r\n  text: string;\r\n  updateStatus: any;\r\n}\r\n\r\nexport const Status: React.FC<StatusData> = ({ text, updateStatus }) => {\r\n  const { id } = useParams();\r\n  const [statusText, setStatusText] = useState<string>(text);\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    if (text !== statusText) setStatusText(text);\r\n  }, [text]);\r\n\r\n  const handleStatusMode = () => {\r\n    id === \"27789\" && setEditMode(!editMode);\r\n  };\r\n\r\n  const changeStatusText = (e: any) => {\r\n    setStatusText(e.target.value);\r\n  };\r\n\r\n  const handleUpdateStatus = () => {\r\n    if (id === \"27789\") {\r\n      handleStatusMode();\r\n      updateStatus(statusText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && <span onDoubleClick={handleStatusMode}>{text}</span>}\r\n      {editMode && (\r\n        <input\r\n          autoFocus\r\n          type=\"text\"\r\n          onChange={changeStatusText}\r\n          onBlur={handleUpdateStatus}\r\n          value={statusText}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { ProfileAPIData } from \"../../../interfaces\";\r\nimport styles from \"./style.module.css\";\r\nimport userImg from \"./../../../assets/avatar.png\";\r\nimport profileBg from \"./../../../assets/bg-profile.jpg\";\r\nimport { Status } from \"../Status\";\r\n\r\nexport const ProfileInfo: React.FC<ProfileAPIData> = ({\r\n  profileData,\r\n  status,\r\n  updateStatusDataThunk,\r\n}) => {\r\n  const {\r\n    photos,\r\n    lookingForAJob,\r\n    lookingForAJobDescription,\r\n    fullName,\r\n    contacts,\r\n  } = profileData;\r\n\r\n  return (\r\n    <>\r\n      <img src={profileBg} alt=\"user-bg\" className={styles[\"profile-img\"]} />\r\n      <div className={styles[\"user-info\"]}>\r\n        <img src={photos.small ? photos.small : userImg} alt={fullName} />\r\n        <div className={styles[\"details-container\"]}>\r\n          <Status text={status} updateStatus={updateStatusDataThunk} />\r\n          <span className={styles[\"user-details\"]}>{fullName}</span>\r\n          <span className={styles[\"user-details\"]}>\r\n            looking for a job: {lookingForAJob ? \"yes\" : \"no\"}\r\n          </span>\r\n          <span className={styles[\"user-details\"]}>\r\n            {lookingForAJobDescription}\r\n          </span>\r\n          <span className={styles[\"user-details\"]}>vk: {contacts.vk}</span>\r\n          <span className={styles[\"user-details\"]}>\r\n            inst: {contacts.instagram}\r\n          </span>\r\n          <span className={styles[\"user-details\"]}>yt: {contacts.youtube}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { PostsContainer } from \"../../containers/PostsContainer\";\r\nimport { ProfileAPIData } from \"../../interfaces\";\r\nimport { ProfileInfo } from \"./ProfileInfo\";\r\n\r\nexport const Profile: React.FC<ProfileAPIData> = (props) => {\r\n  return (\r\n    <>\r\n      <ProfileInfo {...props} />\r\n      <PostsContainer {...props} />\r\n    </>\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { ProfileAPIData, ProfileRouteData, StateData } from \"../../interfaces\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Profile } from \"../../components/Profile\";\r\nimport {\r\n  getStatusDataThunk,\r\n  getUserDataThunk,\r\n  sendPost,\r\n  updateStatusDataThunk,\r\n} from \"../../redux/reducers/ProfileReducer\";\r\nimport { Loader } from \"../../components/UI/Loader\";\r\nimport { useParams } from \"react-router\";\r\nimport { compose } from \"redux\";\r\n\r\nconst ProfileWithRouterContainer: React.FC<ProfileRouteData> = (props) => {\r\n  const { id = \"27789\" } = useParams();\r\n  return <ProfileAPIContainer {...props} userId={id || \"27789\"} />;\r\n};\r\n\r\nconst ProfileAPIContainer: React.FC<ProfileAPIData> = (props) => {\r\n  useEffect(() => {\r\n    props.getUserDataThunk(props.userId);\r\n    props.getStatusDataThunk(props.userId);\r\n  }, []);\r\n\r\n  return <>{props.profileData ? <Profile {...props} /> : <Loader />}</>;\r\n};\r\n\r\nconst mapStateToProps = (state: StateData) => ({\r\n  posts: state.profilePage.posts,\r\n  profileData: state.profilePage.profileData,\r\n  isAuth: state.header.isAuth,\r\n  status: state.profilePage.status,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendPost,\r\n    getUserDataThunk,\r\n    getStatusDataThunk,\r\n    updateStatusDataThunk,\r\n  })\r\n)(ProfileWithRouterContainer);\r\n"],"names":["Post","_ref","message","likes","_jsxs","className","styles","children","_jsx","src","userAvatarUrl","alt","likeUrl","maxLength100","maxLength","Posts","React","posts","sendPost","PostReduxForm","onSubmit","data","post","map","_ref2","id","text","reduxForm","form","_ref3","handleSubmit","Field","type","component","FormTextarea","name","placeholder","validate","required","PostsContainer","connect","state","profilePage","Status","updateStatus","useParams","_useState","useState","_useState2","_slicedToArray","statusText","setStatusText","_useState3","_useState4","editMode","setEditMode","handleStatusMode","onDoubleClick","autoFocus","onChange","e","target","value","onBlur","ProfileInfo","profileData","status","updateStatusDataThunk","photos","lookingForAJob","lookingForAJobDescription","fullName","contacts","_Fragment","small","userImg","vk","instagram","youtube","Profile","props","_objectSpread","ProfileAPIContainer","useEffect","getUserDataThunk","userId","getStatusDataThunk","Loader","compose","isAuth","header","_useParams$id"],"sourceRoot":""}