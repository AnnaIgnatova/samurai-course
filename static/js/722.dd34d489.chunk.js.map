{"version":3,"file":"static/js/722.dd34d489.chunk.js","mappings":"+MACA,EAAyB,sB,SCOZA,EAA+B,SAAHC,GAAsB,IAAhBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAC3CC,EAAK,YAAAC,OAAeH,GAC1B,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAIP,EAAMK,SAAEN,KAGxB,ECdA,GAAgB,UAAU,uBAAuB,YAAY,0BCMhDS,EAAiC,SAAHX,GAAwB,IAAlBY,EAAIZ,EAAJY,KAAMC,EAAIb,EAAJa,KACrD,OAAOR,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAO,QAADH,OAASS,IAAQL,SAAEI,GAChD,ECRA,GAAgB,UAAY,yBAAyB,SAAW,yBCQ1DE,GAAeC,EAAAA,EAAAA,GAAU,KA8CzBC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EAfU,SAAHE,GAA0B,IAApBC,EAAYD,EAAZC,aACpC,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAaZ,SAAA,EAC3BH,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,OACLC,UAAWC,EAAAA,EACXxB,KAAK,UACLyB,YAAY,sBACZC,SAAU,CAACC,EAAAA,EAAUf,MAEvBT,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,WAGd,I,8BCzCA,GAAesB,E,QAAAA,IACbC,EAAAA,GACAC,EAAAA,EAAAA,KAPsB,SAACC,GAAgB,MAAM,CAC7CC,YAAaD,EAAMC,YACnBC,OAAQF,EAAMG,OAAOD,OACtB,GAI0B,CACvBE,YAAAA,EAAAA,KAHJ,EDDkD,SAAHrC,GAGxC,IAFLkC,EAAWlC,EAAXkC,YACAG,EAAWrC,EAAXqC,YAEQC,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SAMjB,OACElC,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAAhC,UACEa,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAAA,UAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,iBAAwBC,SACrC8B,EAAQG,KAAI,SAAAC,GAAA,IAAGzC,EAAEyC,EAAFzC,GAAIC,EAAIwC,EAAJxC,KAAI,OACtBG,EAAAA,EAAAA,KAACN,EAAM,CAAUE,GAAIA,EAAIC,KAAMA,GAAlBD,EAA0B,OAG3CoB,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAAA,SAAmBC,SAAA,CAChC+B,EAASE,KAAI,SAAAE,GAAA,IAAG1C,EAAE0C,EAAF1C,GAAIW,EAAI+B,EAAJ/B,KAAMC,EAAI8B,EAAJ9B,KAAI,OAC7BR,EAAAA,EAAAA,KAACM,EAAO,CAAUC,KAAMA,EAAMC,KAAMA,GAAtBZ,EAA8B,KAE9CI,EAAAA,EAAAA,KAACW,EAAgB,CAACM,SAhBD,SAACsB,GACxBP,EAAYO,EAAKC,QACnB,WAmBF,G","sources":["webpack://my-app/./src/components/Dialogs/Dialog/style.module.css?dc06","components/Dialogs/Dialog/index.tsx","webpack://my-app/./src/components/Dialogs/Message/style.module.css?ac8f","components/Dialogs/Message/index.tsx","webpack://my-app/./src/components/Dialogs/style.module.css?f890","components/Dialogs/index.tsx","containers/DialogsContainer/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"style_dialog__+HH7e\"};","import { Link } from \"react-router-dom\";\r\nimport styles from \"./style.module.css\";\r\n\r\nexport interface DialogData {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport const Dialog: React.FC<DialogData> = ({ id, name }) => {\r\n  const route = `/dialogs/${id}`;\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <Link to={route}>{name}</Link>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"from-me\":\"style_from-me__3ayAm\",\"from-them\":\"style_from-them__Y6VQg\"};","import styles from \"./style.module.css\";\r\n\r\nexport interface MessageData {\r\n  text: string;\r\n  from: string;\r\n}\r\n\r\nexport const Message: React.FC<MessageData> = ({ text, from }) => {\r\n  return <p className={styles[`from-${from}`]}>{text}</p>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__jf4fw\",\"messages\":\"style_messages__WpxEz\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { DialogsPageData } from \"../../interfaces\";\r\nimport { maxLength, required } from \"../../utils/validators\";\r\nimport { FormTextarea } from \"../UI/Form/Field\";\r\nimport { Dialog } from \"./Dialog\";\r\nimport { Message } from \"./Message\";\r\nimport styles from \"./style.module.css\";\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nexport const Dialogs: React.FC<DialogsPageData> = ({\r\n  dialogsPage,\r\n  sendMessage,\r\n}) => {\r\n  const { dialogs, messages } = dialogsPage;\r\n\r\n  const createNewMessage = (data: any) => {\r\n    sendMessage(data.message);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles[\"dialogs-items\"]}>\r\n          {dialogs.map(({ id, name }) => (\r\n            <Dialog key={id} id={id} name={name} />\r\n          ))}\r\n        </div>\r\n        <div className={styles[\"messages\"]}>\r\n          {messages.map(({ id, text, from }) => (\r\n            <Message key={id} text={text} from={from} />\r\n          ))}\r\n          <MessageReduxForm onSubmit={createNewMessage} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MessageForm: React.FC<any> = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        type=\"text\"\r\n        component={FormTextarea}\r\n        name=\"message\"\r\n        placeholder=\"Type something here\"\r\n        validate={[required, maxLength100]}\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({ form: \"message\" })(MessageForm);\r\n","import { Dialogs } from \"../../components/Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { StateData } from \"../../interfaces\";\r\nimport { sendMessage } from \"../../redux/reducers/DialogsReducer\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state: StateData) => ({\r\n  dialogsPage: state.dialogsPage,\r\n  isAuth: state.header.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  WithAuthRedirect,\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  })\r\n)(Dialogs);\r\n"],"names":["Dialog","_ref","id","name","route","concat","_jsx","className","styles","children","Link","to","Message","text","from","maxLength100","maxLength","MessageReduxForm","reduxForm","form","_ref4","handleSubmit","_jsxs","onSubmit","Field","type","component","FormTextarea","placeholder","validate","required","compose","WithAuthRedirect","connect","state","dialogsPage","isAuth","header","sendMessage","dialogs","messages","_Fragment","map","_ref2","_ref3","data","message"],"sourceRoot":""}